version: "3.7"

volumes:
  vol_shared:
    external: true
    name: volume_swarm_shared
  vol_certificates:
    external: true
    name: volume_swarm_certificates

networks:
  network_internal:
    external: false
  network_public:
    external: true
    name: network_swarm_public
  network_private:
    external: true
    name: network_swarm_private

services:
  reverse_proxy:
    image: traefik:v2.1.1 # The official Treafik docker image
    # command:
    #   - "--api.dashboard=true"
    #   - "--providers.docker.swarmMode=true"
    #   - "--providers.docker.endpoint=unix:///var/run/docker.sock"
    #   - "--providers.docker.exposedbydefault=false"
    #   - "--providers.docker.network=network_public"
    #   - "--entrypoints.web.address=:80"
    #   - "--entrypoints.websecure.address=:443"
    #   - "--certificatesresolvers.letsencryptresolver.acme.httpchallenge=true"
    #   - "--certificatesresolvers.letsencryptresolver.acme.httpchallenge.entrypoint=web"
    #   - "--certificatesresolvers.letsencryptresolver.acme.email=you-email@domain.com"
    #   - "--certificatesresolvers.letsencryptresolver.acme.storage=/etc/traefik/letsencrypt/acme.json"
    #   - "--log.level=DEBUG"
    #   - "--log.format=common"
    #   - "--log.filePath=/var/log/traefik/traefik.log"
    #   - "--accesslog=true"
    #   - "--accesslog.filepath=/var/log/traefik/access-log"
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=true"
        # - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
        # - "traefik.http.routers.http-catchall.entrypoints=web"
        # - "traefik.http.routers.http-catchall.middlewares=redirect-https@docker"
        # - "traefik.http.routers.http-catchall.priority=1"
        # - "traefik.http.middlewares.redirect-https.redirectscheme.scheme=https"

        # - "traefik.http.routers.api.rule=Host(`traefik.swarm.localhost`)"
        # - "traefik.http.routers.api.service=api@internal"
        # - "traefik.http.routers.api.middlewares=auth"
        # - "traefik.http.routers.api.priority=2"
        # - "traefik.http.middlewares.auth.basicauth.users=test:$$apr1$$H6uskkkW$$IgXLP6ewTrSuBkTrqE8wj/"
        # - "traefik.http.services.dummy-svc.loadbalancer.server.port=9999"
      resources:
        limits:
          memory: 512M
      restart_policy:
        condition: on-failure
        delay: 11s
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./files/traefik-conf:/etc/traefik"
    ports:
      - "80:80" # The HTTP port
      - "443:443" # The HTTPS port
      - "8080:8080" # The Web UI (Enabled by --api)
    networks:
      - network_public

  whoami:
    image: containous/whoami
    depends_on:
      - reverse_proxy
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.whoami.rule=Host(`whoami.swarm.localhost`)"
        - "traefik.http.routers.whoami.entrypoints=websecure"
        - "traefik.http.routers.whoami.tls.certresolver=letsencryptresolver"
        - "traefik.http.services.whoami.loadbalancer.server.port=80"
      resources:
        limits:
          memory: 256M
      restart_policy:
        condition: on-failure
        delay: 10s
      mode: replicated
      replicas: 2
    networks:
      - network_public
